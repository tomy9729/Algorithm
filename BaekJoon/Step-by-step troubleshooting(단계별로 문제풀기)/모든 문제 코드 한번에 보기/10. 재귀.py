# -*- coding: utf-8 -*-
"""백준알고리즘 재귀함수

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J2bzkhNscqjGTfos_Ear_TrciQDp2_wM
"""

#10872번 팩토리얼
def fact(n) : 
  if n > 0 : 
    return n*fact(n-1)
  else : 
    return 1

n = int(input())
print(fact(n))

#10870번 피보나치 수 5
def fibo(n) : 
  if n == 0 : 
    return 0
  elif n == 1 : 
    return 1
  else : 
    return fibo(n-1) + fibo(n-2)

n= int(input())
print(fibo(n))

#2447번 별 찍기-10

def star(n) :
  if n == 3 : 
    return [['*','*','*'],['*',' ','*'],['*','*','*']]
  arr = [[0]*n for i in range(n)] #입력받은 크기만큼의 n*n 배열을 만든다.
  temp = star(n//3) #시간초과를 회피하기 위함. 반복문 전에 재귀함수를 한 번만 수행하도록 한다.
  for i in range(n) : 
    for j in range(n) : 
      if i >= n//3 and i < 2*n//3 and j >= n//3 and j < 2*n//3 : #빈칸으로 두는 조건
        arr[i][j] = ' '
      else :
        arr[i][j] = temp[i%(n//3)][j%(n//3)] #좌표에 해당하는 값만 가져온다.
  return arr

n=int(input())
x = star(n)
for i in range(n):
    for j in range(n):
        print(x[i][j],end='')
    print(end='\n')

# * * * * * * * * * 
# *   * *   * *   * 
# * * * * * * * * *        
# * * *       * * *        
# *   *       *   * 
# * * *       * * * 
# * * * * * * * * * 
# *   * *   * *   * 
# * * * * * * * * *

#11729번 하노이탑 이동 순서
n = int(input())
c = 0

def hanoi(n,s,d,v) : # n : 원판번호 s : 출발지 d : 도착지 v : 경유지
  if n == 1 : 
    print("{} {}".format(s,d)) 

  else : 
    hanoi(n-1,s,v,d)
    print("{} {}".format(s,d))
    hanoi(n-1,v,d,s)

def count(n) : 
  if n == 1 : return 1
  else : 
    return 2*count(n-1)+1
  
print(count(n))  
hanoi(n,1,3,2)

